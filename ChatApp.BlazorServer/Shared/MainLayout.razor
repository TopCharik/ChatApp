@using Microsoft.AspNetCore.SignalR.Client
@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject IJwtProvider JwtProvider
@inject IConfiguration Configuration

<PageTitle>ChatApp.BlazorServer</PageTitle>

<div class="page">
    <MudThemeProvider/>
    <MudDialogProvider/>
    <MudSnackbarProvider/>
    <MudLayout>
        <MudAppBar Elevation="1">
            <AuthorizeView>
                <Authorized>
                    <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@ToggleDrawer"/>
                    <MudSpacer/>
                    <MudButton Variant="Variant.Filled" Color="Color.Error" OnClick="OnLogOut">Logout</MudButton>
                </Authorized>
                <NotAuthorized>
                    <MudButton Variant="Variant.Text" Style="color: #fff" Class="me-3" Href="/">
                        ChatApp
                    </MudButton>
                    <MudSpacer/>
                    <MudButton Variant="Variant.Filled" Color="Color.Success" Class="me-3" OnClick="OnLogin">
                        Login
                    </MudButton>
                    <MudButton Variant="Variant.Filled" Color="Color.Success" OnClick="OnRegister">Register</MudButton>
                </NotAuthorized>
            </AuthorizeView>
        </MudAppBar>
        <MudDrawer @bind-Open="@_open" Elevation="1">
            <MudDrawerHeader>
                <MudButton Variant="Variant.Text" Color="Color.Primary" Class="me-3" Href="/">
                    Chat App
                </MudButton>
            </MudDrawerHeader>
            <AuthorizeView>
                <Authorized>
                    <MudNavMenu>
                        <MudNavLink Match="NavLinkMatch.All" Href="users" >Users</MudNavLink>
                        <MudNavLink Match="NavLinkMatch.All" Href="chats" >Chats</MudNavLink>
                        <MudNavLink Match="NavLinkMatch.All" Href="change-password" >Change password</MudNavLink>
                    </MudNavMenu>
                </Authorized>
            </AuthorizeView>
        </MudDrawer>
        <MudMainContent Class="pt-16 px-16">
            <MudContainer MaxWidth="MaxWidth.Large">
                <CascadingValue Value="_hubConnection">
                    @Body
                </CascadingValue>
            </MudContainer>
        </MudMainContent>
    </MudLayout>
</div>

@code{
    private bool _open = false;
    private HubConnection? _hubConnection;
    public bool IsConnected => _hubConnection is {State: HubConnectionState.Connected };
    
    protected override async Task OnInitializedAsync()
    {
        var apiUrl = Configuration["ApiUrl"];
        _hubConnection = new HubConnectionBuilder().WithUrl($"{apiUrl}/hub/conversations").Build();
        await _hubConnection.StartAsync();
    }

    void ToggleDrawer()
    {
        _open = !_open;
    }

    private void OnLogin()
    {
        NavigationManager.NavigateTo("login");
    }

    private void OnRegister()
    {
        NavigationManager.NavigateTo("register");
    }

    private async Task OnLogOut()
    {
        await JwtProvider.DeleteTokenAsync();
    }

}