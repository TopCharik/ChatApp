@page "/Chats/{ChatLink}"
@inject IChatsApiProvider ChatsApiProvider

<h3>ChatsPage @ChatLink</h3>

@if (_conversationParticipationDto != null && _conversationParticipationDto.ChatInfo != null)
{
    <MudText>@_conversationParticipationDto.Id.ToString()</MudText>
    <MudText>@_conversationParticipationDto.ChatInfo.Title</MudText>
    @if (_conversationParticipationDto.Participation != null)
    {
        <MudText>Participation Id: @_conversationParticipationDto.Participation.Id.ToString()</MudText>
        <MudText>CanWriteMessages: @_conversationParticipationDto.Participation.CanWriteMessages.ToString()</MudText>
    }
    @if (_conversationParticipationDto.Participation == null && !_conversationParticipationDto.ChatInfo.IsPrivate)
    {
        <MudText>Join chat</MudText>
    }
    @if (_conversationParticipationDto.Participation == null && _conversationParticipationDto.ChatInfo.IsPrivate)
    {
        <MudText>This is a private chat</MudText>
    }
    
     
}

@code {
    [Parameter]
    public string? ChatLink { get; set; }

    private ConversationParticipationDto? _conversationParticipationDto;


    protected override async Task OnInitializedAsync()
    {
        var response = await ChatsApiProvider.GetChatParticipation(ChatLink);
        if (response.IsSuccessStatusCode)
        {
            _conversationParticipationDto = await response.Content.ReadFromJsonAsync<ConversationParticipationDto>();
        }
    }

}